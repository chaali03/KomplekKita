<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Content Security Policy -->
    <meta http-equiv="Content-Security-Policy" content="default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com https://cdn.jsdelivr.net https://unpkg.com https://fonts.googleapis.com https://fonts.gstatic.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://cdn.jsdelivr.net https://unpkg.com https://fonts.googleapis.com; style-src-elem 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://cdn.jsdelivr.net https://unpkg.com https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com; img-src 'self' data: https: blob:; connect-src 'self' https:; media-src 'self' https:; object-src 'none'; base-uri 'self'; form-action 'self';">
    <title>KomplekKita - Admin</title>
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Poppins:wght@600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" crossorigin="anonymous" referrerpolicy="no-referrer" />
  <link rel="stylesheet" href="/css/admin-dashboard.css">
  <!-- Global Dashboard Preloader: ensures non-zero KPIs on first visit across all admin pages (mobile/tab) -->
  <script src="/js/dashboard-preload.js" is:inline></script>
    <!-- Favicon: Chrome-compatible configuration with cache busting -->
    <link rel="icon" type="image/x-icon" href="/favicon.ico?v=2" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png?v=2" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png?v=2" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg?v=2" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png?v=2" />
    <meta name="theme-color" content="#4f46e5" />
</head>
<body class="plan-plus">
  <div class="bg-animated">
    <div class="bg-orb orb-1"></div>
    <div class="bg-orb orb-2"></div>
    <div class="bg-orb orb-3"></div>
  </div>

  <div class="admin-layout">
    <slot name="sidebar" />
    
    <div class="admin-main">
      <slot name="topbar" />
      
      <main class="admin-content">
        <slot />
      </main>
    </div>
  </div>

  <div class="noise-overlay"></div>
  <div class="demo-watermark" aria-hidden="true">DEMO</div>

  <!-- Mock API bridge to intercept /api iuran endpoints and prevent 404 in dev -->
  <script>
    // @ts-nocheck
    // Lightweight client-side mock for iuran endpoints used by the dashboard
    (function(){
      if (typeof window === 'undefined' || typeof window.fetch !== 'function') return;
      const originalFetch = window.fetch.bind(window);
      function readJSON(/** @type {string} */ key, /** @type {any} */ fallback){
        try { return JSON.parse(localStorage.getItem(key) || 'null') ?? fallback; } catch(_) { return fallback; }
      }
      function getResidents(){
        try {
          const warga = readJSON('warga_data_v1', []);
          if (Array.isArray(warga) && warga.length > 0) return warga.filter(r => r && (r.status === 'aktif' || typeof r.status === 'undefined'));
          const demo = readJSON('residents_data', []);
          return Array.isArray(demo) ? demo.filter(r => r && (r.status === 'aktif' || typeof r.status === 'undefined')) : [];
        } catch(_) { return []; }
      }
      function calcIuran(/** @type {string} */ periode){
        const cfgs = readJSON('dues_configs', {});
        const cfg = (cfgs && cfgs[periode]) || readJSON('dues_config', {});
        const amount = Number((cfg && cfg.amount) || 0) || 0;
        const pays = readJSON('dues_payments', {});
        const paidArr = Array.isArray(pays?.[periode]?.paid) ? pays[periode].paid : [];
        const residents = getResidents();
        const paidCount = paidArr.length || 0;
        const residentsCount = residents.length || 0;
        const unpaidCount = Math.max(0, residentsCount - paidCount);
        const totalPending = Math.max(0, amount * unpaidCount);
        return { amount, paidCount, residentsCount, unpaidCount, totalPending, residents, paid: paidArr };
      }
      function jsonResponse(/** @type {any} */ obj, /** @type {number} */ status = 200){
        return new Response(JSON.stringify(obj), { status, headers: { 'Content-Type': 'application/json' } });
      }
      window.fetch = async function(input, init){
        try {
          const url = (typeof input === 'string') ? input : ((input && (/** @type {any} */(input)).url) ? (/** @type {any} */(input)).url : '');
          if (typeof url === 'string' && url.indexOf('/api/') === 0) {
            const u = new URL(String(url), window.location.origin);
            const path = u.pathname;
            const method = (init && init.method) || 'GET';
            const periode = (u.searchParams.get('periode') || '').trim();
            const komplekId = Number(u.searchParams.get('komplek_id') || '0');
            const STATUS_PATHS = ['/api/iuran/status','/api/demo/iuran/status','/api/public/iuran/status','/api/demo/iuran/realtime'];
            if (STATUS_PATHS.includes(path) && method === 'GET'){
              const c = calcIuran(periode);
              return jsonResponse({ status:'success', data: { komplek_id: komplekId, periode, nominal: c.amount, amount: c.amount, warga_belum_bayar: c.unpaidCount, unpaidCount: c.unpaidCount, residentsCount: c.residentsCount, totalPending: c.totalPending, residents: c.residents, paid: c.paid } }, 200);
            }
            if (path === '/api/demo/demo/iuran/sync' && method === 'POST'){
              const c = calcIuran(periode);
              return jsonResponse({ status:'success', data: { komplek_id: komplekId, periode, nominal: c.amount, warga_belum_bayar: c.unpaidCount, unpaidCount: c.unpaidCount, totalPending: c.totalPending } }, 200);
            }
          }
        } catch(_) { /* pass-through */ }
        return originalFetch(input, init);
      };
    })();
  </script>

  <!-- Charts and Admin dashboard scripts -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js" defer></script>
  <script src="/js/realtime-charts.js" defer></script>
  <script src="/js/admin-dashboard.js" defer></script>

  <!-- Dispatch a global 'charts-ready' event once Chart.js is available -->
  <script>
    (function waitForChart(retry) {
      retry = retry || 0;
      try {
        if (typeof window !== 'undefined' && typeof (window as any).Chart !== 'undefined') {
          window.dispatchEvent(new Event('charts-ready'));
          return;
        }
      } catch (e) { /* no-op */ }
      if (retry < 60) setTimeout(() => waitForChart(retry + 1), 100);
    })(0);
  </script>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // Reduce motion if user prefers
      const prefersReduced = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
      if (prefersReduced) {
        document.documentElement.classList.add('reduce-motion');
      }
    });
  </script>

  <style>
    :root {
      --bg: #f7fafc;
      --surface: #ffffff;
      --surface-2: #f8fafc;
      --text: #0f172a;
      --muted: #64748b;
      --primary: #2563eb;
      --primary-600: #1d4ed8;
      --accent: #22d3ee;
      --success: #10b981;
      --danger: #ef4444;
      --warning: #f59e0b;
      --radius: 16px;
      --shadow: 0 10px 35px rgba(2, 6, 23, 0.06);
      --shadow-soft: 0 8px 24px rgba(2, 6, 23, 0.08);
    }

    * { box-sizing: border-box; }
    html, body { height: 100%; }
    html { scroll-behavior: smooth; }
    body {
      margin: 0;
      font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji";
      color: var(--text);
      background: linear-gradient(180deg, #ffffff 0%, var(--bg) 100%);
      overflow-x: hidden;
    }

    /* Ensure admin layout fills viewport height */
    .admin-layout { display: flex; min-height: 100dvh; }
    /* Ensure main column itself spans full viewport height */
    .admin-main { display: flex; flex-direction: column; flex: 1; min-width: 0; min-height: 100%; }
    /* Let content area fill remaining column with compact spacing */
    .admin-content { flex: 1; display: flex; flex-direction: column; min-height: 100%; padding: 8px 10px 10px; }

    .admin-frame {
      position: relative;
      max-width: 1200px;
      margin: 0 auto;
      padding: 8px clamp(10px, 2vw, 18px) 12px;
      min-height: auto;
    }

    /* Compact sections/cards spacing inside admin pages */
    .card-container, .table-section, .quick-actions-section, .charts-grid, .notifications-widget, .dashboard-hero, .stats-grid {
      margin-top: 6px;
      margin-bottom: 8px;
    }
    .stats-grid { margin-bottom: 8px; }

    /* Reduce default gaps inside chart-card and sections */
    .chart-card .card-body { padding: 6px; }
    .chart-card .card-header { padding: 6px 8px; }

    /* Compact section headers */
    .section-header { padding: 8px 10px; margin-bottom: 6px; }

    /* Animated background orbs */
    .bg-animated { position: fixed; inset: 0; pointer-events: none; z-index: -2; }
    .bg-orb { position: absolute; border-radius: 50%; filter: blur(60px); opacity: .12; }
    .orb-1 { width: 520px; height: 520px; left: -140px; top: -140px; background: radial-gradient(circle at 30% 30%, rgba(37,99,235,.25), transparent 60%); animation: floatA 18s ease-in-out infinite; }
    .orb-2 { width: 420px; height: 420px; right: -120px; top: 10%; background: radial-gradient(circle at 60% 40%, rgba(34,211,238,.22), transparent 60%); animation: floatB 22s ease-in-out infinite; }
    .orb-3 { width: 380px; height: 380px; left: 20%; bottom: -160px; background: radial-gradient(circle at 40% 60%, rgba(16,185,129,.22), transparent 60%); animation: floatC 24s ease-in-out infinite; }

    @keyframes floatA { 0%,100% { transform: translateY(0) translateX(0); } 50% { transform: translateY(24px) translateX(16px); } }
    @keyframes floatB { 0%,100% { transform: translateY(0) translateX(0); } 50% { transform: translateY(-20px) translateX(-20px); } }
    @keyframes floatC { 0%,100% { transform: translateY(0) translateX(0); } 50% { transform: translateY(18px) translateX(12px); } }

    .noise-overlay { position: fixed; inset: 0; pointer-events: none; background-image: url('data:image/svg+xml;utf8,<?xml version="1.0" encoding="UTF-8"?><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%"><filter id="n"><feTurbulence type="fractalNoise" baseFrequency="0.9" numOctaves="4" stitchTiles="stitch"/></filter><rect width="100%" height="100%" filter="url(%23n)" opacity=".015"/></svg>'); z-index: -1; }

    /* Subtle DEMO watermark */
    .demo-watermark {
      position: fixed;
      inset: 0;
      pointer-events: none;
      z-index: 0;
      display: grid;
      place-items: center;
      font-family: Poppins, Inter, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial;
      font-weight: 700;
      font-size: clamp(64px, 14vw, 160px);
      letter-spacing: 12px;
      color: #0f172a;
      opacity: 0.045;
      transform: rotate(-24deg);
      user-select: none;
    }

    /* Cards base */
    .card {
      background: var(--surface);
      border: 1px solid #e5e7eb;
      border-radius: var(--radius);
      box-shadow: var(--shadow-soft);
    }
  
    /* Accessibility */
    .reduce-motion .bg-orb { animation: none !important; }

    /* Global modern scrollbar (applies to all scrollable areas in admin) */
    :root {
      --scrollbar-size: 10px;
      --scrollbar-bg: transparent;
      --scrollbar-thumb: linear-gradient(180deg, #93c5fd 0%, #3b82f6 50%, #1d4ed8 100%);
      --scrollbar-thumb-hover: linear-gradient(180deg, #bfdbfe 0%, #60a5fa 50%, #2563eb 100%);
      --scrollbar-thumb-active: linear-gradient(180deg, #93c5fd 0%, #3b82f6 50%, #1d4ed8 100%);
      --scrollbar-radius: 999px;
    }

    /* Firefox */
    * {
      scrollbar-width: thin;
      scrollbar-color: #60a5fa transparent;
    }

    /* WebKit/Chromium */
    *::-webkit-scrollbar {
      width: var(--scrollbar-size);
      height: var(--scrollbar-size);
    }
    *::-webkit-scrollbar-track {
      background: var(--scrollbar-bg);
    }
    *::-webkit-scrollbar-thumb {
      background: var(--scrollbar-thumb);
      border-radius: var(--scrollbar-radius);
      border: 2px solid transparent;
      background-clip: padding-box;
    }
    *::-webkit-scrollbar-thumb:hover {
      background: var(--scrollbar-thumb-hover);
    }
    *::-webkit-scrollbar-thumb:active {
      background: var(--scrollbar-thumb-active);
    }
    *::-webkit-scrollbar-corner {
      background: transparent;
    }
  </style>
</body>
</html>