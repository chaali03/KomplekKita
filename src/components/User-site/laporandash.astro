---
---

<section class="laporan" data-aos="fade-up">
  <div class="laporan-header">
    <div class="header-content">
      <h2 class="laporan-title">Laporan Keuangan</h2>
      <p class="laporan-subtitle">Ringkasan transaksi keuangan komplek</p>
    </div>
    <div class="header-icon">
      <i class="fas fa-chart-line"></i>
    </div>
  </div>
  
  <div class="summary-card" data-aos="fade-up" data-aos-delay="100">
    <div class="summary-icon">
      <i class="fas fa-wallet"></i>
    </div>
    <div class="summary-content">
      <div class="summary-label">Total Kas:</div>
      <div id="total-kas" class="summary-value">Rp. 0</div>
    </div>
  </div>
  
  <div class="grid">
    <div class="report-card" data-aos="fade-right" data-aos-delay="200">
      <div class="card-header">
        <h3><i class="fas fa-file-alt"></i> Laporan</h3>
        <div class="card-actions">
          <button class="refresh-btn" title="Refresh data"><i class="fas fa-sync-alt"></i></button>
        </div>
      </div>
      <div class="card-body">
        <ul id="by-kategori" class="data-list"></ul>
      </div>
    </div>
    
    <div class="report-card" data-aos="fade-left" data-aos-delay="300">
      <div class="card-header">
        <h3><i class="fas fa-receipt"></i> Transaksi</h3>
        <div class="card-actions">
          <button class="refresh-btn" title="Refresh data"><i class="fas fa-sync-alt"></i></button>
        </div>
      </div>
      <div class="card-body">
        <ul id="by-tanggal" class="data-list"></ul>
      </div>
    </div>
  </div>
  
</section>

<style>
  .laporan { 
    padding: 2rem; 
    background-color: #ffffff;
    border-radius: 16px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
    margin-bottom: 2rem;
  }

  .laporan-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid #f0f0f0;
  }

  .header-content {
    flex: 1;
  }

  .laporan-title {
    font-size: 1.75rem;
    font-weight: 700;
    color: #333;
    margin: 0 0 0.5rem 0;
    position: relative;
    display: inline-block;
  }

  .laporan-title::after {
    content: '';
    position: absolute;
    bottom: -8px;
    left: 0;
    width: 60px;
    height: 3px;
    background: linear-gradient(90deg, #085895, #00b4d8);
    border-radius: 3px;
  }

  .laporan-subtitle {
    color: #666;
    font-size: 0.95rem;
    margin: 0;
  }

  .header-icon {
    background: linear-gradient(135deg, #085895, #00b4d8);
    width: 50px;
    height: 50px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.5rem;
    box-shadow: 0 4px 10px rgba(8, 88, 149, 0.2);
  }

  .summary-card {
    background: linear-gradient(135deg, #085895, #00b4d8);
    border-radius: 12px;
    padding: 1.25rem;
    display: flex;
    align-items: center;
    margin-bottom: 1.5rem;
    box-shadow: 0 8px 20px rgba(8, 88, 149, 0.15);
    color: white;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .summary-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 12px 25px rgba(8, 88, 149, 0.25);
  }

  .summary-icon {
    background-color: rgba(255, 255, 255, 0.2);
    width: 50px;
    height: 50px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 1rem;
    font-size: 1.25rem;
  }

  .summary-content {
    flex: 1;
  }

  .summary-label {
    font-size: 0.9rem;
    opacity: 0.9;
    margin-bottom: 0.25rem;
  }

  .summary-value {
    font-size: 1.5rem;
    font-weight: 700;
  }

  .grid { 
    display: grid; 
    grid-template-columns: 1fr 1fr; 
    gap: 1.5rem; 
  }

  .report-card {
    background-color: #ffffff;
    border-radius: 12px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: 1px solid #f0f0f0;
  }

  .report-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  }

  .card-header {
    background-color: #f8f9fa;
    padding: 1rem 1.25rem;
    border-bottom: 1px solid #f0f0f0;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .card-header h3 {
    margin: 0;
    font-size: 1.1rem;
    font-weight: 600;
    color: #333;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .card-header h3 i {
    color: #085895;
  }

  .card-actions {
    display: flex;
    gap: 0.5rem;
  }

  .refresh-btn {
    background-color: transparent;
    border: none;
    color: #666;
    cursor: pointer;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .refresh-btn:hover {
    background-color: rgba(8, 88, 149, 0.1);
    color: #085895;
  }

  .card-body {
    padding: 1.25rem;
  }

  .data-list {
    margin: 0;
    padding-left: 1.25rem;
    list-style-type: none;
  }

  .data-list li {
    padding: 0.5rem 0;
    border-bottom: 1px dashed #f0f0f0;
    position: relative;
  }

  .data-list li:last-child {
    border-bottom: none;
  }

  .data-list li::before {
    content: '';
    position: absolute;
    left: -1.25rem;
    top: 50%;
    transform: translateY(-50%);
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: #085895;
  }

  

  @media (max-width: 768px) { 
    .grid { 
      grid-template-columns: 1fr; 
    }
    
    .laporan-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }
    
    .header-icon {
      align-self: flex-end;
      margin-top: -3rem;
    }
  }

  @media (max-width: 480px) {
    .laporan {
      padding: 1.5rem;
    }
    
    .summary-card {
      flex-direction: column;
      text-align: center;
    }
    
    .summary-icon {
      margin-right: 0;
      margin-bottom: 1rem;
    }
    
    .laporan-title {
      font-size: 1.5rem;
    }
    
    .summary-value {
      font-size: 1.25rem;
    }
  }
</style>

<script type="module">
  // Import AOS if not already imported in the layout
  document.addEventListener('DOMContentLoaded', function() {
    if (typeof AOS !== 'undefined') {
      AOS.refresh();
    }
  });

  const currency = (n) => new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR', maximumFractionDigits: 0 }).format(Number(n||0));
  const qs = new URLSearchParams(location.search);
  const komplekId = parseInt(qs.get('komplek_id') || localStorage.getItem('komplek_id') || '1');
  localStorage.setItem('komplek_id', String(komplekId));

  // Track loading state
  let isLoading = false;

  function getLaporanSnapshot(){
    try {
      const snap = JSON.parse(localStorage.getItem('laporan_totals_snapshot')||'null');
      if (snap && snap.totals){
        const income = Number(snap.totals.income||0);
        const expense = Number(snap.totals.expense||0);
        const balance = Number(snap.totals.balance||0);
        const any = (income>0 || expense>0 || balance>0);
        return { income, expense, balance, any };
      }
    } catch(_) { }
    return { income:0, expense:0, balance:0, any:false };
  }

  function paintTotalKasAnimated(val){
    const totalEl = document.getElementById('total-kas');
    if(!totalEl) return;
    totalEl.style.opacity = '0';
    setTimeout(()=>{ totalEl.textContent = currency(val); totalEl.style.opacity = '1'; }, 300);
  }

  // Import safe fetch wrapper
  const { fetchJson } = await import('~/utils/fetch-wrapper');
  
  async function fetchJsonSafe(url){
    try {
      return await fetchJson(url);
    } catch (error) {
      throw new Error(`Gagal fetch: ${url} - ${error.message}`);
    }
  }

  // Helpers to format
  const formatDateID = (dateStr) => {
    if (!dateStr) return '';
    const d = new Date(`${dateStr}T00:00:00`);
    return d.toLocaleDateString('id-ID', { day: '2-digit', month: 'short', year: 'numeric' });
  };

  // Read admin data from localStorage
  function readAdminReports(){
    try { return JSON.parse(localStorage.getItem('financial_reports')||'[]') || [] } catch { return [] }
  }
  function readAdminTransactions(){
    try { return JSON.parse(localStorage.getItem('financial_transactions_v2')||'[]') || [] } catch { return [] }
  }

  // Safe HTML text
  function escapeHTML(str){
    return String(str || '')
      .replace(/&/g, '&amp;')
      .replace(/</g, '&lt;')
      .replace(/>/g, '&gt;')
      .replace(/"/g, '&quot;')
      .replace(/'/g, '&#039;');
  }

  // Render Laporan list (maps to admin riwayat laporan)
  function renderReportsList(){
    const katEl = document.getElementById('by-kategori');
    if(!katEl) return;
    katEl.innerHTML = '';
    const reports = (readAdminReports() || []).slice().sort((a,b)=>{
      const ad = a?.createdAt || '';
      const bd = b?.createdAt || '';
      return String(bd).localeCompare(String(ad));
    }).slice(0, 6);
    if (reports.length === 0){
      const li = document.createElement('li');
      li.textContent = 'Belum ada laporan tersimpan';
      katEl.appendChild(li);
      return;
    }
    reports.forEach((r, index)=>{
      const periodeText = (r?.snapshot?.txDate)
        ? formatDateID(r.snapshot.txDate)
        : `${formatDateID(r?.startDate)} — ${formatDateID(r?.endDate)}`;
      const jumlahText = (typeof r?.snapshot?.txAmount === 'number' && r?.snapshot?.txAmount > 0)
        ? ` • ${currency(r.snapshot.txAmount)}`
        : '';
      const ket = (r?.snapshot?.txDesc && String(r.snapshot.txDesc).trim().length > 0)
        ? String(r.snapshot.txDesc)
        : (r?.notes && String(r.notes).trim().length > 0 ? String(r.notes) : '');
      const li = document.createElement('li');
      li.innerHTML = `${escapeHTML(r?.title || 'Laporan')} <span style="opacity:.8">(${periodeText}${jumlahText})</span>${ket ? `<div style="opacity:.85;margin-top:4px;font-size:.92em;">\u201C${escapeHTML(ket)}\u201D</div>` : ''}`;
      li.style.opacity = '0';
      li.style.transform = 'translateX(-10px)';
      katEl.appendChild(li);
      setTimeout(()=>{
        li.style.transition = 'all 0.3s ease';
        li.style.opacity = '1';
        li.style.transform = 'translateX(0)';
      }, 100*index);
    });
  }

  // Render Transaksi list (maps to admin daftar transaksi)
  function renderTransactionsList(){
    const tglEl = document.getElementById('by-tanggal');
    if(!tglEl) return;
    tglEl.innerHTML = '';
    const txs = (readAdminTransactions() || []).slice().sort((a,b)=>{
      return String(b?.date||'').localeCompare(String(a?.date||''));
    }).slice(0, 8);
    if (txs.length === 0){
      const li = document.createElement('li');
      li.textContent = 'Belum ada transaksi';
      tglEl.appendChild(li);
      return;
    }
    txs.forEach((t, index)=>{
      const li = document.createElement('li');
      const tipe = (t?.type||'').toLowerCase() === 'masuk' ? 'Masuk' : 'Keluar';
      const kategori = t?.category || '-';
      const tanggal = formatDateID(t?.date || '');
      const amount = currency(t?.amount || 0);
      const desc = (t?.description && String(t.description).trim().length > 0) ? ` • ${escapeHTML(t.description)}` : '';
      li.innerHTML = `${tanggal} — ${tipe} ${escapeHTML(kategori)}: ${amount}${desc}`;
      li.style.opacity = '0';
      li.style.transform = 'translateX(-10px)';
      tglEl.appendChild(li);
      setTimeout(()=>{
        li.style.transition = 'all 0.3s ease';
        li.style.opacity = '1';
        li.style.transform = 'translateX(0)';
      }, 100*index);
    });
  }

  function renderSummary(data){
    // Keep API fallback only for total-kas when no snapshot
    const totalEl = document.getElementById('total-kas');
    if(totalEl) {
      totalEl.style.opacity = '0';
      setTimeout(() => {
        totalEl.textContent = currency(data?.total ?? 0);
        totalEl.style.opacity = '1';
      }, 300);
    }
    // Lists are driven by admin data, not API summary
    renderReportsList();
    renderTransactionsList();
  }

  async function fetchData() {
    if (isLoading) return;
    
    isLoading = true;
    
    // Add loading animation to refresh buttons
    document.querySelectorAll('.refresh-btn').forEach(btn => {
      btn.classList.add('loading');
      const icon = btn.querySelector('i');
      if (icon) icon.className = 'fas fa-spinner fa-spin';
    });
    
    try {
      // If laporan snapshot exists and is non-zero, prefer it and skip API overwrite
      const snap = getLaporanSnapshot();
      if (snap.any) {
        paintTotalKasAnimated(snap.balance);
      } else {
        const data = await fetchJson(`/api/public/transaksi/summary?komplek_id=${encodeURIComponent(komplekId)}`);
        renderSummary(data);
      }
      // Always render lists from admin data
      renderReportsList();
      renderTransactionsList();
    } catch(err) {
      console.error(err);
      // Show error notification
      const errorMsg = document.createElement('div');
      errorMsg.className = 'error-notification';
      errorMsg.textContent = 'Gagal memuat data. Silakan coba lagi.';
      document.body.appendChild(errorMsg);
      
      setTimeout(() => {
        errorMsg.style.opacity = '0';
        setTimeout(() => errorMsg.remove(), 500);
      }, 3000);
    } finally {
      // Reset loading state
      isLoading = false;
      
      // Reset refresh buttons
      setTimeout(() => {
        document.querySelectorAll('.refresh-btn').forEach(btn => {
          btn.classList.remove('loading');
          const icon = btn.querySelector('i');
          if (icon) icon.className = 'fas fa-sync-alt';
        });
      }, 500);
    }
  }

  // Initialize data
  (async function init(){
    // Try paint from laporan snapshot first so it matches admin/laporan immediately
    const snap = getLaporanSnapshot();
    if (snap.any) paintTotalKasAnimated(snap.balance);
    // Render lists immediately from stored admin data
    renderReportsList();
    renderTransactionsList();
    // Then fetch if needed (e.g., when no snapshot yet)
    await fetchData();
    
    // Add event listeners to refresh buttons
    document.querySelectorAll('.refresh-btn').forEach(btn => {
      btn.addEventListener('click', fetchData);
    });

    // Keep in sync with laporan page changes in real-time
    window.addEventListener('storage', (e)=>{
      if (!e) return;
      if (e.key === 'laporan_totals_snapshot'){
        const s = getLaporanSnapshot();
        if (s.any) paintTotalKasAnimated(s.balance);
      }
      if (e.key === 'financial_reports'){
        renderReportsList();
      }
      if (e.key === 'financial_transactions_v2'){
        renderTransactionsList();
      }
    });
  })();

  // Add CSS for error notification
  const style = document.createElement('style');
  style.textContent = `
    .error-notification {
      position: fixed;
      bottom: 20px;
      right: 20px;
      background-color: #f44336;
      color: white;
      padding: 12px 20px;
      border-radius: 4px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      z-index: 1000;
      opacity: 1;
      transition: opacity 0.5s ease;
    }
    
    .refresh-btn.loading {
      pointer-events: none;
      opacity: 0.7;
    }
    
    .summary-value {
      transition: opacity 0.3s ease;
    }
  `;
  document.head.appendChild(style);
</script>
