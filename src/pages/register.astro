---
import Layout from '../layouts/Layout.astro';
import SimpleFooter from '../components/SimpleFooter.astro';
---

<Layout>
    <section class="register-page">
        <!-- Background elements -->
        <div class="register-bg" aria-hidden="true">
            <!-- Animated waves -->
            <!-- Waves animation removed -->

            <!-- Geometric shapes -->
            <div class="shapes">
                <div class="shape circle" data-aos="fade-in" data-aos-delay="200"></div>
                <div class="shape donut" data-aos="fade-in" data-aos-delay="400"></div>
                <div class="shape square" data-aos="fade-in" data-aos-delay="600"></div>
                <div class="shape triangle" data-aos="fade-in" data-aos-delay="800"></div>
            </div>

            <!-- Animated blobs -->
            <div class="animated-blobs">
                <div class="blob blob-1"></div>
                <div class="blob blob-2"></div>
                <div class="blob blob-3"></div>
                <div class="blob blob-4"></div>
            </div>

            <!-- Particle animations -->
            <div class="particles">
                <div class="particle particle-1"></div>
                <div class="particle particle-2"></div>
                <div class="particle particle-3"></div>
                <div class="particle particle-4"></div>
                <div class="particle particle-5"></div>
                <div class="particle particle-6"></div>
            </div>

            <!-- Grid pattern -->
            <div class="grid-pattern"></div>

            <!-- Floating elements -->
            <div class="floating-elements">
                <div class="float-element element-1"></div>
                <div class="float-element element-2"></div>
                <div class="float-element element-3"></div>
                <div class="float-element element-4"></div>
            </div>
        </div>

        <!-- Back to Home Button -->
        <div class="back-home-container">
            <a href="/" class="back-home-btn" data-aos="fade-down" data-aos-delay="100">
                <i class="fa-solid fa-arrow-left"></i>
                <span>Kembali ke Beranda</span>
            </a>
        </div>

        <div class="container">
            <div class="register-content">
                <div class="register-left" data-aos="fade-right" data-aos-duration="1000">
                    <div class="register-form-container">
                        <div class="register-header">
                            <h1 class="form-title">Buat Akun Baru</h1>
                            <p class="form-subtitle">Bergabunglah dengan komunitas KomplekKita dan nikmati semua fitur kami</p>
                        </div>

                        <form class="register-form">
                            <div class="form-row">
                                <div class="form-group">
                                    <label for="first-name" class="form-label">Nama Depan</label>
                                    <div class="input-container">
                                        <i class="fa-solid fa-user input-icon"></i>
                                        <input type="text" id="first-name" name="first-name" class="form-input" placeholder="Nama depan" required />
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="last-name" class="form-label">Nama Belakang</label>
                                    <div class="input-container">
                                        <i class="fa-solid fa-user input-icon"></i>
                                        <input type="text" id="last-name" name="last-name" class="form-input" placeholder="Nama belakang" required />
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="email" class="form-label">Email</label>
                                <div class="input-container">
                                    <i class="fa-solid fa-envelope input-icon"></i>
                                    <input type="email" id="email" name="email" class="form-input" placeholder="Masukkan email Anda" required />
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="phone" class="form-label">Nomor Telepon</label>
                                <div class="input-container">
                                    <i class="fa-solid fa-phone input-icon"></i>
                                    <input type="tel" id="phone" name="phone" class="form-input" placeholder="Masukkan nomor telepon" required />
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="password" class="form-label">Password</label>
                                <div class="input-container">
                                    <i class="fa-solid fa-lock input-icon"></i>
                                    <input type="password" id="password" name="password" class="form-input" placeholder="Buat password" required />
                                    <i class="fa-solid fa-eye toggle-password"></i>
                                </div>
                                <div class="password-strength">
                                    <div class="strength-bar">
                                        <div class="strength-progress"></div>
                                    </div>
                                    <span class="strength-text">Kekuatan password</span>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="confirm-password" class="form-label">Konfirmasi Password</label>
                                <div class="input-container">
                                    <i class="fa-solid fa-lock input-icon"></i>
                                    <input type="password" id="confirm-password" name="confirm-password" class="form-input" placeholder="Konfirmasi password" required />
                                    <i class="fa-solid fa-eye toggle-password"></i>
                                </div>
                            </div>

                            <div class="form-group terms">
                                <div class="checkbox-container">
                                    <input type="checkbox" id="terms" name="terms" required />
                                    <label for="terms">Saya menyetujui <a href="#">Syarat dan Ketentuan</a> serta <a href="#">Kebijakan Privasi</a></label>
                                </div>
                            </div>

                            <button type="submit" class="register-button" disabled>
                                <span class="button-text">Daftar Sekarang</span>
                                <i class="fa-solid fa-user-plus"></i>
                            </button>


                            <div class="login-link">
                                <p>Sudah punya akun? <a href="/login">Masuk sekarang</a></p>
                            </div>
                        </form>
                    </div>
                </div>

                <div class="register-right" data-aos="fade-left" data-aos-duration="1000" data-aos-delay="300">
                    <div class="register-animation">
                        <div id="lottie-register"></div>
                    </div>
                    <div class="register-features">
                        <h2 class="features-title">Keuntungan Bergabung</h2>
                        <ul class="features-list">
                            <li class="feature-item" data-aos="fade-up" data-aos-delay="100">
                                <i class="fa-solid fa-check-circle"></i>
                                <span>Kelola iuran dan keuangan dengan transparan</span>
                            </li>
                            <li class="feature-item" data-aos="fade-up" data-aos-delay="200">
                                <i class="fa-solid fa-check-circle"></i>
                                <span>Komunikasi mudah dengan tetangga dan pengurus</span>
                            </li>
                            <li class="feature-item" data-aos="fade-up" data-aos-delay="300">
                                <i class="fa-solid fa-check-circle"></i>
                                <span>Akses informasi dan pengumuman terbaru</span>
                            </li>
                            <li class="feature-item" data-aos="fade-up" data-aos-delay="400">
                                <i class="fa-solid fa-check-circle"></i>
                                <span>Laporkan dan pantau masalah keamanan</span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <SimpleFooter />
</Layout>

<style>
    .register-page {
        position: relative;
        min-height: 100vh;
        overflow: hidden;
        padding: 2rem 0;
        display: flex;
        align-items: center;
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, rgba(74, 108, 247, 0.03) 0%, rgba(139, 92, 246, 0.03) 50%, rgba(244, 114, 182, 0.03) 100%);
    }

    .register-bg {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        overflow: hidden;
        background: radial-gradient(ellipse at center, rgba(74, 108, 247, 0.08) 0%, rgba(139, 92, 246, 0.04) 50%, transparent 100%);
        animation: bg-pulse 8s ease-in-out infinite;
    }

    @keyframes bg-pulse {
        0% { 
            background: radial-gradient(ellipse at center, rgba(74, 108, 247, 0.08) 0%, rgba(139, 92, 246, 0.04) 50%, transparent 100%);
            opacity: 0.9;
        }
        50% { 
            background: radial-gradient(ellipse at center, rgba(139, 92, 246, 0.1) 0%, rgba(74, 108, 247, 0.05) 50%, transparent 100%);
            opacity: 1;
        }
        100% { 
            background: radial-gradient(ellipse at center, rgba(74, 108, 247, 0.08) 0%, rgba(139, 92, 246, 0.04) 50%, transparent 100%);
            opacity: 0.9;
        }
    }
    
    /* Add a subtle moving gradient overlay */
    .register-page::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, rgba(74, 108, 247, 0.03) 0%, rgba(139, 92, 246, 0.03) 50%, rgba(244, 114, 182, 0.03) 100%);
        z-index: -1;
        animation: gradient-shift 15s ease infinite;
        background-size: 400% 400%;
    }
    
    @keyframes gradient-shift {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
    }

    /* Back to Home Button */
    .back-home-container {
        position: absolute;
        top: 2rem;
        left: 2rem;
        z-index: 10;
    }

    .back-home-btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.8rem 1.5rem;
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 25px;
        color: #333;
        text-decoration: none;
        font-weight: 500;
        font-size: 0.9rem;
        transition: all 0.3s ease;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .back-home-btn:hover {
        background: rgba(255, 255, 255, 1);
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    }

    .back-home-btn i {
        font-size: 1rem;
        color: #4a6cf7;
    }

    .container {
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1.5rem;
        position: relative;
        z-index: 1;
    }

    .register-content {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 2rem;
        animation: fadeInUp 1s ease-out;
    }
    
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .register-left {
        flex: 1;
        max-width: 600px;
    }

    .register-right {
        flex: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .register-animation {
        width: 100%;
        max-width: 400px;
        margin-bottom: 2rem;
    }

    #lottie-register {
        width: 100%;
        height: 300px;
    }

    .register-form-container {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(20px);
        -webkit-backdrop-filter: blur(20px);
        border-radius: 28px;
        padding: 2.8rem;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.12), 0 10px 20px rgba(74, 108, 247, 0.05), inset 0 1px 1px rgba(255, 255, 255, 0.6);
        border: 1px solid rgba(255, 255, 255, 0.5);
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        position: relative;
        overflow: hidden;
        transform: translateZ(0);
    }
    
    .register-form-container:hover {
        transform: translateY(-5px) translateZ(0);
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15), 0 15px 25px rgba(74, 108, 247, 0.05), inset 0 1px 1px rgba(255, 255, 255, 0.7);
        border-color: rgba(255, 255, 255, 0.7);
    }

    .register-header {
        text-align: center;
        margin-bottom: 2rem;
    }

    .logo-link {
        display: inline-flex;
        align-items: center;
        text-decoration: none;
        margin-bottom: 1.5rem;
    }

    .logo {
        height: 40px;
        width: auto;
        margin-right: 0.5rem;
    }

    .logo-text {
        font-size: 1.5rem;
        font-weight: 700;
        color: #333;
    }

    .form-title {
        font-size: 1.8rem;
        font-weight: 700;
        color: #333;
        margin-bottom: 0.5rem;
        position: relative;
        animation: titleSlideIn 1s ease-out;
        transform: translateY(0);
        opacity: 1;
    }

    @keyframes titleSlideIn {
        0% {
            transform: translateY(-20px);
            opacity: 0;
        }
        100% {
            transform: translateY(0);
            opacity: 1;
        }
    }

    .form-subtitle {
        color: #666;
        font-size: 0.9rem;
        animation: subtitleFadeIn 1.2s ease-out 0.3s both;
        opacity: 0;
        transform: translateY(10px);
    }

    @keyframes subtitleFadeIn {
        0% {
            opacity: 0;
            transform: translateY(10px);
        }
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .form-row {
        display: flex;
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .form-row .form-group {
        flex: 1;
        margin-bottom: 0;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
        color: #333;
    }

    .input-container {
        position: relative;
    }

    .input-icon {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: #666;
    }

    .form-input {
        width: 100%;
        padding: 0.8rem 1rem 0.8rem 2.5rem;
        border: 1px solid #ddd;
        border-radius: 10px;
        font-size: 1rem;
        transition: all 0.3s ease;
    }

    .form-input:focus {
        border-color: #4a6cf7;
        box-shadow: 0 0 0 3px rgba(74, 108, 247, 0.2);
        outline: none;
        transform: translateY(-1px);
    }
    
    .form-input:hover {
        border-color: rgba(74, 108, 247, 0.5);
        box-shadow: 0 2px 8px rgba(74, 108, 247, 0.1);
    }

    /* Validation feedback styles */
    .input-container.valid .form-input {
        border-color: #10b981;
        box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.2);
    }

    .input-container.invalid .form-input {
        border-color: #ef4444;
        box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.2);
    }

    .validation-feedback {
        margin-top: 0.5rem;
        font-size: 0.8rem;
        padding: 0.5rem;
        border-radius: 6px;
        animation: slideDown 0.3s ease;
    }

    .validation-feedback.error {
        background-color: #fef2f2;
        color: #dc2626;
        border: 1px solid #fecaca;
    }

    .validation-feedback.success {
        background-color: #f0fdf4;
        color: #16a34a;
        border: 1px solid #bbf7d0;
    }

    @keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

.toggle-password {
        position: absolute;
        right: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: #666;
        cursor: pointer;
        z-index: 2;
    }

    .password-strength {
        margin-top: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .strength-bar {
        flex: 1;
        height: 5px;
        background: #eee;
        border-radius: 5px;
        overflow: hidden;
    }

    .strength-progress {
        height: 100%;
        width: 0;
        background: #ff6b6b;
        transition: all 0.3s ease;
    }

    .strength-text {
        font-size: 0.8rem;
        color: #666;
    }

    .checkbox-container {
        display: flex;
        align-items: flex-start;
        gap: 0.5rem;
    }

    .checkbox-container input {
        margin-top: 0.3rem;
    }

    .checkbox-container label {
        font-size: 0.9rem;
        color: #666;
        line-height: 1.4;
    }

    .checkbox-container a {
        color: #4a6cf7;
        text-decoration: none;
        font-weight: 500;
    }

    .register-button {
        width: 100%;
        padding: 1.1rem;
        background: linear-gradient(135deg, #4a6cf7, #667eea, #764ba2);
        background-size: 200% auto;
        color: white;
        border: none;
        border-radius: 18px;
        font-size: 1.05rem;
        font-weight: 600;
        cursor: pointer;
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 0.8rem;
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        position: relative;
        overflow: hidden;
        box-shadow: 0 6px 20px rgba(74, 108, 247, 0.35), 0 2px 8px rgba(74, 108, 247, 0.2), inset 0 1px 1px rgba(255, 255, 255, 0.3);
        letter-spacing: 0.02em;
    }

    .register-button:hover {
        background-position: right center;
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(74, 108, 247, 0.5), 0 3px 10px rgba(74, 108, 247, 0.3);
    }

    .register-button:disabled {
        background: linear-gradient(135deg, #bbb, #ccc, #ddd);
        cursor: not-allowed;
        opacity: 0.7;
        box-shadow: none;
        transform: none;
    }

    .register-button:disabled:hover {
        background: linear-gradient(135deg, #bbb, #ccc, #ddd);
        transform: none;
    }

    .register-button:active {
        transform: translateY(-1px);
        background: linear-gradient(135deg, #3a5ce5, #5a6edb, #6a3b9c);
        box-shadow: 0 4px 15px rgba(74, 108, 247, 0.4);
    }

    .register-button::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
        transition: all 0.6s ease;
    }

    .register-button:hover::before {
        left: 100%;
    }

    .social-register {
        margin-top: 2rem;
        text-align: center;
    }

    .social-text {
        color: #666;
        margin-bottom: 1rem;
        position: relative;
    }

    .social-text::before,
    .social-text::after {
        content: '';
        position: absolute;
        top: 50%;
        width: 30%;
        height: 1px;
        background: #ddd;
    }

    .social-text::before {
        left: 0;
    }

    .social-text::after {
        right: 0;
    }

    .social-buttons {
        display: flex;
        gap: 1rem;
        justify-content: center;
    }

    .social-button {
        flex: 1;
        padding: 0.7rem;
        border: 1px solid #ddd;
        border-radius: 10px;
        background: white;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .social-button:hover {
        background: #f5f5f5;
        transform: translateY(-2px);
    }

    .google i {
        color: #DB4437;
    }

    .facebook i {
        color: #4267B2;
    }

    .login-link {
        margin-top: 1.5rem;
        text-align: center;
        font-size: 0.9rem;
    }

    .login-link a {
        color: #4a6cf7;
        font-weight: 600;
        text-decoration: none;
    }

    /* Features List */
    .register-features {
        width: 100%;
        max-width: 500px;
    }

    .features-title {
        font-size: 3.5rem;
        font-weight: 900;
        margin-bottom: 2rem;
        background: linear-gradient(135deg, #4a6cf7, #667eea, #764ba2, #f093fb);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        font-family: 'Poppins', sans-serif;
        letter-spacing: -0.03em;
        line-height: 1;
        text-shadow: none;
        position: relative;
        text-transform: uppercase;
        filter: drop-shadow(0 4px 8px rgba(74, 108, 247, 0.3));
        transition: all 0.5s ease;
        cursor: default;
        animation: textGlow 3s ease-in-out infinite alternate;
        text-align: center;
    }

    @keyframes textGlow {
        0% {
            filter: drop-shadow(0 4px 8px rgba(74, 108, 247, 0.3));
            background-position: 0% 50%;
        }
        50% {
            filter: drop-shadow(0 8px 16px rgba(74, 108, 247, 0.5));
            background-position: 100% 50%;
        }
        100% {
            filter: drop-shadow(0 4px 8px rgba(74, 108, 247, 0.3));
            background-position: 0% 50%;
        }
    }

    .features-title:hover {
        transform: scale(1.05);
        filter: drop-shadow(0 10px 20px rgba(74, 108, 247, 0.6));
        letter-spacing: -0.01em;
    }

    .features-title::after {
        content: '';
        position: absolute;
        bottom: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 80px;
        height: 4px;
        background: linear-gradient(90deg, #4a6cf7, #f093fb);
        border-radius: 4px;
        transition: all 0.3s ease;
        animation: lineGlow 3s ease-in-out infinite alternate;
    }
    
    @keyframes lineGlow {
        0% {
            box-shadow: 0 0 5px rgba(74, 108, 247, 0.5);
            background: linear-gradient(90deg, #4a6cf7, #f093fb);
        }
        50% {
            box-shadow: 0 0 15px rgba(74, 108, 247, 0.7);
            background: linear-gradient(90deg, #f093fb, #4a6cf7);
        }
        100% {
            box-shadow: 0 0 5px rgba(74, 108, 247, 0.5);
            background: linear-gradient(90deg, #4a6cf7, #f093fb);
        }
    }

    .features-title:hover::after {
        width: 120px;
        height: 6px;
        background: linear-gradient(90deg, #f093fb, #4a6cf7);
        box-shadow: 0 0 20px rgba(74, 108, 247, 0.8);
    }

    .features-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .feature-item {
        display: flex;
        align-items: flex-start;
        gap: 1rem;
        margin-bottom: 1.2rem;
        padding: 1rem;
        background: rgba(255, 255, 255, 0.8);
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
        animation: featureItemSlideIn 0.8s ease-out both;
        opacity: 0;
        transform: translateX(30px);
    }

    .feature-item:nth-child(1) { animation-delay: 0.1s; }
    .feature-item:nth-child(2) { animation-delay: 0.2s; }
    .feature-item:nth-child(3) { animation-delay: 0.3s; }
    .feature-item:nth-child(4) { animation-delay: 0.4s; }

    @keyframes featureItemSlideIn {
        0% {
            opacity: 0;
            transform: translateX(30px);
        }
        100% {
            opacity: 1;
            transform: translateX(0);
        }
    }

    .feature-item:hover {
        transform: translateY(-5px) scale(1.02);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        background: rgba(255, 255, 255, 0.95);
    }

    .feature-item i {
        color: #4a6cf7;
        font-size: 1.2rem;
        margin-top: 0.2rem;
    }

    .feature-item span {
        font-size: 1rem;
        color: #333;
        line-height: 1.5;
    }

    /* Waves animation removed */

    /* Shapes Animation */
    .shapes {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
        z-index: -1;
    }

    .shape {
        position: absolute;
        opacity: 0.2;
    }

    .circle {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        background: #4a6cf7;
        top: 20%;
        left: 10%;
        animation: float 8s ease-in-out infinite;
    }

    .donut {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        border: 15px solid #4a6cf7;
        top: 60%;
        right: 10%;
        animation: float 10s ease-in-out infinite;
    }

    .square {
        width: 60px;
        height: 60px;
        background: #4a6cf7;
        top: 30%;
        right: 20%;
        transform: rotate(45deg);
        animation: float 9s ease-in-out infinite;
    }

    .triangle {
        width: 0;
        height: 0;
        border-left: 40px solid transparent;
        border-right: 40px solid transparent;
        border-bottom: 70px solid #4a6cf7;
        top: 70%;
        left: 20%;
        animation: float 7s ease-in-out infinite;
    }

    @keyframes float {
        0%, 100% {
            transform: translateY(0) rotate(0deg);
        }
        50% {
            transform: translateY(-20px) rotate(5deg);
        }
    }

    /* Animated Blobs */
    .animated-blobs {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
    }

    .blob {
        position: absolute;
        border-radius: 50%;
        filter: blur(40px);
        mix-blend-mode: multiply;
        animation: blob-move 20s ease-in-out infinite;
    }

    .blob-1 {
        width: 300px;
        height: 300px;
        background: linear-gradient(45deg, rgba(74, 108, 247, 0.4), rgba(139, 92, 246, 0.4));
        top: 10%;
        left: 10%;
        animation-duration: 25s;
    }

    .blob-2 {
        width: 250px;
        height: 250px;
        background: linear-gradient(135deg, rgba(139, 92, 246, 0.3), rgba(244, 114, 182, 0.3));
        top: 60%;
        right: 10%;
        animation-duration: 30s;
        animation-delay: -5s;
    }

    .blob-3 {
        width: 200px;
        height: 200px;
        background: linear-gradient(225deg, rgba(59, 130, 246, 0.35), rgba(16, 185, 129, 0.35));
        bottom: 20%;
        left: 30%;
        animation-duration: 35s;
        animation-delay: -10s;
    }

    .blob-4 {
        width: 180px;
        height: 180px;
        background: linear-gradient(315deg, rgba(245, 158, 11, 0.3), rgba(239, 68, 68, 0.3));
        top: 30%;
        right: 30%;
        animation-duration: 28s;
        animation-delay: -15s;
    }

    @keyframes blob-move {
        0%, 100% {
            transform: translate(0, 0) scale(1) rotate(0deg);
        }
        25% {
            transform: translate(100px, -50px) scale(1.1) rotate(90deg);
        }
        50% {
            transform: translate(-50px, 100px) scale(0.9) rotate(180deg);
        }
        75% {
            transform: translate(-100px, -100px) scale(1.05) rotate(270deg);
        }
    }

    /* Enhanced Particles Animation */
    .particles {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    .particle {
        position: absolute;
        border-radius: 50%;
        background: linear-gradient(45deg, rgba(74, 108, 247, 0.4), rgba(139, 92, 246, 0.4));
        filter: blur(2px);
    }

    .particle-1 {
        width: 8px;
        height: 8px;
        top: 20%;
        left: 20%;
        animation: particle-move 25s linear infinite;
    }

    .particle-2 {
        width: 12px;
        height: 12px;
        top: 40%;
        left: 60%;
        animation: particle-move 30s linear infinite;
        animation-delay: -5s;
    }

    .particle-3 {
        width: 6px;
        height: 6px;
        top: 70%;
        left: 80%;
        animation: particle-move 35s linear infinite;
        animation-delay: -10s;
    }

    .particle-4 {
        width: 10px;
        height: 10px;
        top: 30%;
        right: 25%;
        animation: particle-move 28s linear infinite;
        animation-delay: -15s;
    }

    .particle-5 {
        width: 14px;
        height: 14px;
        bottom: 40%;
        left: 40%;
        animation: particle-move 32s linear infinite;
        animation-delay: -20s;
    }

    .particle-6 {
        width: 9px;
        height: 9px;
        top: 60%;
        right: 15%;
        animation: particle-move 27s linear infinite;
        animation-delay: -25s;
    }

    @keyframes particle-move {
        0% {
            transform: translate(0, 0) scale(1);
            opacity: 0.3;
        }
        25% {
            transform: translate(150px, 75px) scale(1.2);
            opacity: 0.6;
        }
        50% {
            transform: translate(75px, 150px) scale(0.8);
            opacity: 0.4;
        }
        75% {
            transform: translate(-75px, 75px) scale(1.1);
            opacity: 0.7;
        }
        100% {
            transform: translate(0, 0) scale(1);
            opacity: 0.3;
        }
    }

    /* Grid Pattern */
    .grid-pattern {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: 
            linear-gradient(rgba(74, 108, 247, 0.02) 1px, transparent 1px),
            linear-gradient(90deg, rgba(74, 108, 247, 0.02) 1px, transparent 1px);
        background-size: 50px 50px;
        animation: grid-move 20s linear infinite;
        z-index: -2;
    }

    @keyframes grid-move {
        0% {
            transform: translate(0, 0);
        }
        100% {
            transform: translate(50px, 50px);
        }
    }

    /* Floating Elements */
    .floating-elements {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
    }

    .float-element {
        position: absolute;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .element-1 {
        width: 60px;
        height: 60px;
        top: 15%;
        left: 15%;
        animation: float-gentle 12s ease-in-out infinite;
    }

    .element-2 {
        width: 40px;
        height: 40px;
        top: 70%;
        right: 20%;
        animation: float-gentle 15s ease-in-out infinite;
        animation-delay: -3s;
    }

    .element-3 {
        width: 80px;
        height: 80px;
        bottom: 30%;
        left: 60%;
        animation: float-gentle 18s ease-in-out infinite;
        animation-delay: -6s;
    }

    .element-4 {
        width: 50px;
        height: 50px;
        top: 40%;
        right: 40%;
        animation: float-gentle 14s ease-in-out infinite;
        animation-delay: -9s;
    }

    @keyframes float-gentle {
        0%, 100% {
            transform: translateY(0) rotate(0deg);
            opacity: 0.3;
        }
        50% {
            transform: translateY(-30px) rotate(180deg);
            opacity: 0.6;
        }
    }

    /* Responsive Styles */
    @media (max-width: 992px) {
        .register-content {
            flex-direction: column-reverse;
        }

        .register-left, .register-right {
            max-width: 100%;
        }

        .register-animation {
            max-width: 300px;
            margin: 0 auto 2rem;
        }

        #lottie-register {
            height: 250px;
        }

        .register-features {
            max-width: 100%;
            margin-bottom: 2rem;
        }

        .features-title {
            font-size: 2.5rem;
            text-align: center;
        }

        .back-home-container {
            position: relative;
            top: 0;
            left: 0;
            margin-bottom: 1rem;
            text-align: center;
        }
    }

    /* Responsive Styles */
    @media (max-width: 1200px) {
        .container {
            max-width: 95%;
        }
        
        .register-content {
            gap: 2rem;
        }
        
        .register-form-container {
            padding: 2.2rem;
        }

        .features-title {
            font-size: 3rem;
        }
    }
    
    @media (max-width: 992px) {
        .register-content {
            flex-direction: column;
            gap: 2rem;
            align-items: center;
            width: 100%;
            max-width: 600px;
            margin: 0 auto;
        }

        .register-left, .register-right {
            width: 100%;
            max-width: 600px;
            margin: 0 auto;
        }

        .register-form-container {
            width: 100%;
            max-width: 500px;
            margin: 0 auto;
            padding: 2rem;
        }
        
        .back-home-container {
            position: relative;
            top: 0;
            left: 0;
            margin-bottom: 1rem;
            text-align: center;
            width: 100%;
            display: flex;
            justify-content: center;
        }
        
        .back-home-btn {
            transform: scale(1.05);
            padding: 0.7rem 1.3rem;
        }
    }
    
    @media (max-width: 768px) {
        .register-page {
            padding: 1.5rem 0;
            min-height: auto;
        }
        
        .container {
            padding: 0 1rem;
        }
        
        .register-content {
            max-width: 500px;
            padding: 1rem 0;
            gap: 1.5rem;
        }
        
        .form-row {
            flex-direction: column;
            gap: 1.5rem;
        }
        
        .register-form-container {
            padding: 1.8rem;
            border-radius: 20px;
            background: rgba(255, 255, 255, 0.92);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        
        .form-title {
            font-size: 1.5rem;
            margin-bottom: 0.8rem;
        }

        .features-title {
            font-size: 2rem;
            margin-bottom: 1.5rem;
        }
        
        .back-home-container {
            top: 1.2rem;
            left: 1.2rem;
        }
        
        .back-home-btn {
            padding: 0.6rem 1.2rem;
            font-size: 0.85rem;
            border-radius: 20px;
        }
        
        #lottie-register {
            height: 200px;
        }
    }

    @media (max-width: 576px) {
        .register-page {
            padding: 1rem 0;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }
        
        .container {
            padding: 0 0.8rem;
        }
        
        .register-content {
            max-width: 100%;
            padding: 0;
            gap: 1rem;
        }
        
        .register-form-container {
            padding: 1.5rem;
            border-radius: 16px;
            background: rgba(255, 255, 255, 0.95);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        
        .form-title {
            font-size: 1.3rem;
            margin-bottom: 0.5rem;
        }

        .features-title {
            font-size: 1.8rem;
            margin-bottom: 1.2rem;
        }
        
        .form-subtitle {
            font-size: 0.85rem;
            margin-bottom: 1.2rem;
        }
        
        .back-home-btn {
            padding: 0.5rem 1rem;
            font-size: 0.75rem;
            border-radius: 18px;
        }
        
        .back-home-container {
            top: 1rem;
            left: 1rem;
            position: fixed;
        }
        
        .form-input {
            padding: 0.7rem 1rem 0.7rem 2.4rem;
            font-size: 0.9rem;
            border-radius: 12px;
            height: 42px;
        }
        
        .input-icon {
            font-size: 0.9rem;
            left: 0.8rem;
        }
        
        .register-button {
            padding: 0.7rem;
            font-size: 0.9rem;
            border-radius: 12px;
            height: 42px;
        }
        
        .form-group {
            margin-bottom: 1rem;
        }
        
        .form-label {
            font-size: 0.85rem;
            margin-bottom: 0.3rem;
        }
        
        .register-header {
            margin-bottom: 1rem;
        }
        
        .logo {
            height: 30px;
        }
        
        .logo-text {
            font-size: 1.2rem;
        }
        
        .social-buttons {
            flex-direction: column;
        }

        #lottie-register {
            height: 180px;
        }

        .feature-item {
            padding: 0.8rem;
        }
    }
    
    @media (max-width: 400px) {
        .form-title {
            font-size: 1.2rem;
        }

        .features-title {
            font-size: 1.5rem;
            margin-bottom: 1rem;
        }
        
        .form-subtitle {
            font-size: 0.8rem;
            margin-bottom: 1rem;
        }
        
        .register-form-container {
            padding: 1.2rem;
            border-radius: 14px;
        }
        
        .form-group {
            margin-bottom: 0.8rem;
        }
        
        .logo {
            height: 26px;
        }
        
        .logo-text {
            font-size: 1rem;
        }
        
        .form-input {
            padding: 9px 10px 9px 34px;
            font-size: 0.85rem;
            border-radius: 12px;
            height: 38px;
        }
        
        .input-icon {
            font-size: 0.85rem;
            left: 10px;
        }
        
        .register-button {
            height: 38px;
            font-size: 0.85rem;
            padding: 9px 12px;
            border-radius: 12px;
        }
        
        .back-home-container {
            top: 0.8rem;
            left: 0.8rem;
        }
        
        .back-home-btn {
            padding: 0.4rem 0.8rem;
            font-size: 0.7rem;
        }
        
        .back-home-btn span {
            display: none;
        }
        
        #lottie-register {
            height: 150px;
        }
        
        .feature-item {
            padding: 0.6rem;
        }
    }
</style>

<script is:inline>
            // Initialize AOS Animation Library
        document.addEventListener('DOMContentLoaded', async function() {
            // Setup real-time validation for input fields
            const { setupRealTimeValidation } = await import('/src/utils/validation.ts');
            
            const firstNameInput = document.getElementById('first-name');
            const lastNameInput = document.getElementById('last-name');
            const emailInput = document.getElementById('email');
            
            if (firstNameInput instanceof HTMLInputElement) setupRealTimeValidation(firstNameInput, 'user');
            if (lastNameInput instanceof HTMLInputElement) setupRealTimeValidation(lastNameInput, 'user');
            if (emailInput instanceof HTMLInputElement) setupRealTimeValidation(emailInput, 'user');
        // Initialize AOS with error handling
        if (typeof AOS !== 'undefined') {
            try {
                AOS.init({
                    duration: 1000,
                    once: true
                });
                // AOS initialized successfully
            } catch (error) {
                console.warn('AOS initialization failed:', error);
            }
        } else {
            console.warn('AOS library not available');
        }

        // Initialize Lottie Animation with error handling
        if (typeof lottie !== 'undefined') {
            try {
                const registerAnimation = lottie.loadAnimation({
                    container: document.getElementById('lottie-register'),
                    renderer: 'svg',
                    loop: true,
                    autoplay: true,
                    path: '/animations/icon-morph.json'
                });
                // Lottie animation initialized successfully
            } catch (error) {
                console.warn('Lottie animation failed to load:', error);
                // Hide the lottie container and show a fallback
                const lottieContainer = document.getElementById('lottie-register');
                if (lottieContainer) {
                    lottieContainer.style.display = 'none';
                }
            }
        } else {
            console.warn('Lottie library not available');
            // Hide the lottie container
            const lottieContainer = document.getElementById('lottie-register');
            if (lottieContainer) {
                lottieContainer.style.display = 'none';
            }
        }

        // Toggle password visibility (eye open = masked, eye slash = visible)
        const togglePasswordButtons = document.querySelectorAll('.toggle-password');
        togglePasswordButtons.forEach((button) => {
            const container = button.closest('.input-container');
            const input = container ? container.querySelector('input.form-input') : null;
            if (!input) return;

            // Initial state
            input.setAttribute('type', 'password');
            button.classList.remove('fa-eye-slash');
            button.classList.add('fa-eye');
            button.setAttribute('role', 'button');
            button.setAttribute('tabindex', '0');
            button.setAttribute('aria-pressed', 'false');
            button.setAttribute('title', 'Tampilkan password');

            const toggle = () => {
                const masked = input.getAttribute('type') === 'password';
                input.setAttribute('type', masked ? 'text' : 'password');
                if (masked) {
                    button.classList.remove('fa-eye');
                    button.classList.add('fa-eye-slash');
                } else {
                    button.classList.remove('fa-eye-slash');
                    button.classList.add('fa-eye');
                }
                button.setAttribute('aria-pressed', String(masked));
                button.setAttribute('title', masked ? 'Sembunyikan password' : 'Tampilkan password');
            };

            button.addEventListener('click', toggle);
            button.addEventListener('keydown', (e) => {
                if (e.key === 'Enter' || e.key === ' ') {
                    e.preventDefault();
                    toggle();
                }
            });
        });

        // Password strength meter (robust and reactive)
        const passwordInput = document.getElementById('password');
        const strengthProgress = document.querySelector('.strength-progress');
        const strengthText = document.querySelector('.strength-text');
        const strengthBar = document.querySelector('.strength-bar');

        const calcStrength = (password) => {
            let score = 0;
            if (password.length >= 8) score += 1;
            if (/[a-z]/.test(password) && /[A-Z]/.test(password)) score += 1;
            if (/\d/.test(password)) score += 1;
            if (/[^a-zA-Z\d]/.test(password)) score += 1;
            return score;
        };

        const updateStrengthUI = (score) => {
            const map = {
                0: { color: '#ff6b6b', label: 'Lemah' },
                1: { color: '#ff6b6b', label: 'Lemah' },
                2: { color: '#ffbb33', label: 'Sedang' },
                3: { color: '#00c851', label: 'Kuat' },
                4: { color: '#007e33', label: 'Sangat Kuat' },
            };
            const width = (score / 4) * 100;
            const { color, label } = map[score];
            if (strengthProgress) {
                strengthProgress.style.width = `${width}%`;
                strengthProgress.style.background = color;
                strengthProgress.setAttribute('aria-valuenow', String(width));
            }
            if (strengthText) {
                strengthText.textContent = `Kekuatan password: ${label}`;
            }
        };

        if (passwordInput && strengthProgress && strengthText) {
            strengthProgress.setAttribute('role', 'progressbar');
            strengthProgress.setAttribute('aria-valuemin', '0');
            strengthProgress.setAttribute('aria-valuemax', '100');
            updateStrengthUI(0);
            // ensure bar visible baseline
            if (strengthBar) strengthBar.style.opacity = '1';
            passwordInput.addEventListener('input', function() {
                const score = calcStrength(this.value);
                updateStrengthUI(score);
            });
        }

        // Form submission animation
        const registerForm = document.querySelector('.register-form');
        const registerButton = document.querySelector('.register-button');

        // Disable register button until terms are accepted
        const termsCheckbox = document.getElementById('terms');
        if (termsCheckbox && registerButton) {
            const syncRegisterButton = () => {
                registerButton.disabled = !termsCheckbox.checked;
            };
            syncRegisterButton();
            termsCheckbox.addEventListener('change', syncRegisterButton);
        }

        if (registerForm && registerButton) {
            registerForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                // Prevent submit if disabled for any reason
                if (registerButton.disabled) return;
                
                // Get form data
                const formData = new FormData(registerForm);
                const userData = {
                    firstName: formData.get('first-name'),
                    lastName: formData.get('last-name'),
                    email: formData.get('email'),
                    phone: formData.get('phone'),
                    password: formData.get('password'),
                    confirmPassword: formData.get('confirm-password')
                };
                
                // Validate passwords match
                if (userData.password !== userData.confirmPassword) {
                    showToast('Password dan konfirmasi password tidak cocok', 'error');
                    return;
                }
                
                // Validate user data for profanity
                const { validateUserData } = await import('/src/utils/validation.ts');
                const userValidation = validateUserData({
                    firstName: userData.firstName,
                    lastName: userData.lastName,
                    email: userData.email,
                    phone: userData.phone
                });
                
                if (!userValidation.isValid) {
                    showToast(userValidation.errors[0], 'error');
                    return;
                }
                
                // Add loading state
                registerButton.classList.add('loading');
                registerButton.innerHTML = '<span class="button-text">Memproses...</span><i class="fa-solid fa-spinner fa-spin"></i>';
                
                try {
                    // Call PHP API directly
                    const resp = await fetch('http://127.0.0.1:8000/api/register', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify({
                            first_name: userData.firstName,
                            last_name: userData.lastName,
                            email: userData.email,
                            phone: userData.phone,
                            password: userData.password
                        })
                    });

                    const data = await resp.json().catch(() => ({}));
                    if (!resp.ok) {
                        showToast(data.message || 'Registrasi gagal', 'error');
                    } else {
                        showToast('Registrasi berhasil! Silakan lengkapi data komplek Anda.', 'success');
                        // Store user data temporarily for komplek registration
                        localStorage.setItem('tempUserData', JSON.stringify({
                            email: userData.email,
                            name: `${userData.firstName} ${userData.lastName}`.trim()
                        }));
                        setTimeout(() => { window.location.href = '/register-komplek'; }, 1200);
                    }
                } catch (error) {
                    console.error('Registration error:', error);
                    showToast('Terjadi kesalahan sistem', 'error');
                } finally {
                    // Reset button state
                    registerButton.classList.remove('loading');
                    registerButton.innerHTML = '<span class="button-text">Daftar Sekarang</span><i class="fa-solid fa-user-plus"></i>';
                }
            });
        }
        
        // Toast notification function
        function showToast(message, type = 'info') {
            const toast = document.createElement('div');
            toast.className = `toast toast-${type}`;
            toast.innerHTML = `
                <div class="toast-content">
                    <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'}"></i>
                    <span>${message}</span>
                </div>
            `;
            
            // Add toast styles if not already present
            if (!document.querySelector('#toast-styles')) {
                const style = document.createElement('style');
                style.id = 'toast-styles';
                style.textContent = `
                    .toast {
                        position: fixed;
                        top: 20px;
                        right: 20px;
                        background: white;
                        border-radius: 8px;
                        padding: 16px;
                        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
                        z-index: 10000;
                        animation: slideIn 0.3s ease;
                        max-width: 400px;
                    }
                    .toast-success { border-left: 4px solid #10b981; }
                    .toast-error { border-left: 4px solid #ef4444; }
                    .toast-info { border-left: 4px solid #3b82f6; }
                    .toast-content { display: flex; align-items: center; gap: 8px; }
                    .toast-success i { color: #10b981; }
                    .toast-error i { color: #ef4444; }
                    .toast-info i { color: #3b82f6; }
                    @keyframes slideIn {
                        from { transform: translateX(100%); opacity: 0; }
                        to { transform: translateX(0); opacity: 1; }
                    }
                `;
                document.head.appendChild(style);
            }
            
            document.body.appendChild(toast);
            setTimeout(() => toast.remove(), 5000);
        }

        // GSAP Animations with error handling
        if (typeof gsap !== 'undefined') {
            try {
                gsap.from('.register-form-container', {
                    y: 50,
                    opacity: 0,
                    duration: 1,
                    ease: 'power3.out'
                });

                gsap.from('.form-group', {
                    y: 20,
                    opacity: 0,
                    duration: 0.8,
                    stagger: 0.2,
                    ease: 'power3.out',
                    delay: 0.5
                });

                gsap.from('.feature-item', {
                    x: 50,
                    opacity: 0,
                    duration: 0.8,
                    stagger: 0.2,
                    ease: 'power3.out',
                    delay: 1
                });
                // GSAP animations initialized successfully
            } catch (error) {
                console.warn('GSAP animations failed:', error);
                // Apply basic CSS animations as fallback
                const elements = document.querySelectorAll('.register-form-container, .form-group, .feature-item');
                elements.forEach(el => {
                    el.style.opacity = '1';
                    el.style.transform = 'translateY(0) translateX(0)';
                });
            }
        } else {
            console.warn('GSAP library not available, using CSS fallback');
            // Apply basic CSS animations as fallback
            const elements = document.querySelectorAll('.register-form-container, .form-group, .feature-item');
            elements.forEach(el => {
                el.style.opacity = '1';
                el.style.transform = 'translateY(0) translateX(0)';
            });
        }
    });
</script>