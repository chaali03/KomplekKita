---
import Layout from '../layouts/Layout.astro';
---

<Layout>
  <div class="register-container">
    <!-- Animated Background Elements -->
    <div class="animated-background">
      <div class="blob blob-1"></div>
      <div class="blob blob-2"></div>
      <div class="blob blob-3"></div>
      <div class="particles-container" id="particles-container"></div>
      <div class="animated-shapes">
        <div class="shape shape-1"></div>
        <div class="shape shape-2"></div>
        <div class="shape shape-3"></div>
        <div class="shape shape-4"></div>
      </div>
    </div>

    <!-- Register Card -->
    <div class="register-card" data-aos="fade-up" data-aos-duration="800">
      <div class="card-header">
        <div class="logo-container">
          <svg width="40" height="40" viewBox="0 0 40 40" fill="none" class="brand-mark">
            <rect width="40" height="40" rx="8" fill="#1E40AF" />
            <path d="M12 16h16v12a2 2 0 01-2 2H14a2 2 0 01-2-2V16zM16 12h8v4H16v-4z" fill="white" />
          </svg>
          <h1 class="brand-text">KomplekKita</h1>
        </div>
        <h2 class="register-title">Buat Akun Baru</h2>
        <p class="register-subtitle">Bergabunglah dengan KomplekKita untuk manajemen perumahan yang lebih baik</p>
      </div>

      <div class="progress-bar" data-aos="fade-right" data-aos-delay="100">
        <div class="progress-step active" data-step="1">
          <div class="step-number">1</div>
          <div class="step-label">Informasi Akun</div>
        </div>
        <div class="progress-line"></div>
        <div class="progress-step" data-step="2">
          <div class="step-number">2</div>
          <div class="step-label">Data Pribadi</div>
        </div>
        <div class="progress-line"></div>
        <div class="progress-step" data-step="3">
          <div class="step-number">3</div>
          <div class="step-label">Selesai</div>
        </div>
      </div>

      <form class="register-form" id="register-form">
        <!-- Step 1: Account Information -->
        <div class="form-step active" data-step="1">
          <div class="form-group" data-aos="fade-up" data-aos-delay="200">
            <label for="email">
              <i class="fas fa-envelope"></i>
              <span>Email</span>
            </label>
            <input type="email" id="email" name="email" placeholder="Masukkan email Anda" required />
            <div class="input-highlight"></div>
          </div>

          <div class="form-group" data-aos="fade-up" data-aos-delay="300">
            <label for="password">
              <i class="fas fa-lock"></i>
              <span>Password</span>
            </label>
            <div class="password-input-container">
              <input type="password" id="password" name="password" placeholder="Masukkan password Anda" required />
              <button type="button" class="toggle-password" aria-label="Toggle password visibility">
                <i class="fas fa-eye"></i>
              </button>
            </div>
            <div class="password-strength" id="password-strength">
              <div class="strength-bar"></div>
              <div class="strength-text">Kekuatan Password</div>
            </div>
            <div class="input-highlight"></div>
          </div>

          <div class="form-group" data-aos="fade-up" data-aos-delay="400">
            <label for="confirm-password">
              <i class="fas fa-lock"></i>
              <span>Konfirmasi Password</span>
            </label>
            <div class="password-input-container">
              <input type="password" id="confirm-password" name="confirm-password" placeholder="Konfirmasi password Anda" required />
              <button type="button" class="toggle-password" aria-label="Toggle password visibility">
                <i class="fas fa-eye"></i>
              </button>
            </div>
            <div class="input-highlight"></div>
          </div>

          <div class="form-actions" data-aos="fade-up" data-aos-delay="500">
            <button type="button" class="btn-next">
              <span>Lanjutkan</span>
              <i class="fas fa-arrow-right"></i>
            </button>
          </div>
        </div>

        <!-- Step 2: Personal Information -->
        <div class="form-step" data-step="2">
          <div class="form-group" data-aos="fade-up" data-aos-delay="200">
            <label for="fullname">
              <i class="fas fa-user"></i>
              <span>Nama Lengkap</span>
            </label>
            <input type="text" id="fullname" name="fullname" placeholder="Masukkan nama lengkap Anda" required />
            <div class="input-highlight"></div>
          </div>

          <div class="form-row" data-aos="fade-up" data-aos-delay="300">
            <div class="form-group">
              <label for="phone">
                <i class="fas fa-phone"></i>
                <span>Nomor Telepon</span>
              </label>
              <input type="tel" id="phone" name="phone" placeholder="Masukkan nomor telepon" required />
              <div class="input-highlight"></div>
            </div>

            <div class="form-group">
              <label for="birth-date">
                <i class="fas fa-calendar"></i>
                <span>Tanggal Lahir</span>
              </label>
              <input type="date" id="birth-date" name="birth-date" required />
              <div class="input-highlight"></div>
            </div>
          </div>

          <div class="form-group" data-aos="fade-up" data-aos-delay="400">
            <label for="address">
              <i class="fas fa-home"></i>
              <span>Alamat</span>
            </label>
            <textarea id="address" name="address" placeholder="Masukkan alamat lengkap Anda" rows="3" required></textarea>
            <div class="input-highlight"></div>
          </div>

          <div class="form-group" data-aos="fade-up" data-aos-delay="500">
            <label for="complex-name">
              <i class="fas fa-building"></i>
              <span>Nama Komplek Perumahan</span>
            </label>
            <input type="text" id="complex-name" name="complex-name" placeholder="Masukkan nama komplek perumahan Anda" required />
            <div class="input-highlight"></div>
          </div>

          <div class="form-actions" data-aos="fade-up" data-aos-delay="600">
            <button type="button" class="btn-prev">
              <i class="fas fa-arrow-left"></i>
              <span>Kembali</span>
            </button>
            <button type="button" class="btn-next">
              <span>Lanjutkan</span>
              <i class="fas fa-arrow-right"></i>
            </button>
          </div>
        </div>

        <!-- Step 3: Completion -->
        <div class="form-step" data-step="3">
          <div class="completion-container" data-aos="zoom-in" data-aos-delay="200">
            <div class="completion-icon">
              <i class="fas fa-check-circle"></i>
            </div>
            <h3 class="completion-title">Hampir Selesai!</h3>
            <p class="completion-text">Silakan periksa kembali data Anda sebelum menyelesaikan pendaftaran.</p>
          </div>

          <div class="terms-container" data-aos="fade-up" data-aos-delay="300">
            <div class="checkbox-container">
              <input type="checkbox" id="terms" name="terms" required />
              <label for="terms">Saya menyetujui <a href="#" class="terms-link">Syarat dan Ketentuan</a> serta <a href="#" class="terms-link">Kebijakan Privasi</a> KomplekKita</label>
            </div>
            <div class="checkbox-container">
              <input type="checkbox" id="newsletter" name="newsletter" />
              <label for="newsletter">Saya ingin menerima berita dan pembaruan dari KomplekKita</label>
            </div>
          </div>

          <div class="form-actions" data-aos="fade-up" data-aos-delay="400">
            <button type="button" class="btn-prev">
              <i class="fas fa-arrow-left"></i>
              <span>Kembali</span>
            </button>
            <button type="submit" class="btn-submit">
              <span class="button-text">Daftar Sekarang</span>
              <i class="fas fa-user-plus"></i>
              <div class="button-loader"></div>
            </button>
          </div>
        </div>
      </form>

      <div class="login-link" data-aos="fade-up" data-aos-delay="500">
        <p>Sudah punya akun?</p>
        <a href="/login" class="login-button">
          <span>Masuk Sekarang</span>
          <i class="fas fa-sign-in-alt"></i>
        </a>
      </div>
    </div>

    <!-- Back to Home Button -->
    <a href="/" class="back-to-home" data-aos="fade-in" data-aos-delay="600">
      <i class="fas fa-home"></i>
      <span>Kembali ke Beranda</span>
    </a>
  </div>
</Layout>

<style>
  /* Main Container Styles */
  .register-container {
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 2rem;
    position: relative;
    overflow: hidden;
    background: linear-gradient(135deg, #f8fafc, #e2e8f0);
    z-index: 1;
  }

  /* Animated Background */
  .animated-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: -1;
  }

  .blob {
    position: absolute;
    border-radius: 50%;
    filter: blur(40px);
    opacity: 0.4;
    animation: float 15s ease-in-out infinite;
  }

  .blob-1 {
    width: 500px;
    height: 500px;
    background: linear-gradient(135deg, rgba(59, 130, 246, 0.6), rgba(16, 185, 129, 0.4));
    top: -200px;
    left: -100px;
    animation-delay: 0s;
  }

  .blob-2 {
    width: 600px;
    height: 600px;
    background: linear-gradient(135deg, rgba(139, 92, 246, 0.5), rgba(245, 158, 11, 0.3));
    bottom: -250px;
    right: -150px;
    animation-delay: -5s;
  }

  .blob-3 {
    width: 300px;
    height: 300px;
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.5), rgba(59, 130, 246, 0.3));
    top: 50%;
    left: 60%;
    animation-delay: -10s;
  }

  @keyframes float {
    0% {
      transform: translate(0, 0) rotate(0deg) scale(1);
    }
    33% {
      transform: translate(30px, -50px) rotate(10deg) scale(1.05);
    }
    66% {
      transform: translate(-20px, 20px) rotate(-5deg) scale(0.95);
    }
    100% {
      transform: translate(0, 0) rotate(0deg) scale(1);
    }
  }

  .particles-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  /* Animated Shapes */
  .animated-shapes {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: -1;
  }

  .shape {
    position: absolute;
    opacity: 0.2;
    animation: shapeFloat 20s linear infinite;
  }

  .shape-1 {
    top: 20%;
    left: 10%;
    width: 60px;
    height: 60px;
    background: #3B82F6;
    clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
    animation-delay: -5s;
  }

  .shape-2 {
    top: 70%;
    left: 20%;
    width: 40px;
    height: 40px;
    background: #10B981;
    border-radius: 8px;
    animation-delay: -10s;
  }

  .shape-3 {
    top: 30%;
    right: 15%;
    width: 50px;
    height: 50px;
    background: #8B5CF6;
    clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
    animation-delay: -15s;
  }

  .shape-4 {
    bottom: 20%;
    right: 10%;
    width: 45px;
    height: 45px;
    background: #F59E0B;
    border-radius: 50%;
    animation-delay: -7s;
  }

  @keyframes shapeFloat {
    0% {
      transform: translateY(0) rotate(0deg);
    }
    50% {
      transform: translateY(-100px) rotate(180deg);
    }
    100% {
      transform: translateY(0) rotate(360deg);
    }
  }

  /* Register Card Styles */
  .register-card {
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
    border-radius: 24px;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.05);
    width: 100%;
    max-width: 700px;
    padding: 2.5rem;
    position: relative;
    overflow: hidden;
    z-index: 2;
    border: 1px solid rgba(255, 255, 255, 0.5);
    transform: translateY(0);
    transition: transform 0.5s ease, box-shadow 0.5s ease;
  }

  .register-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 30px 70px rgba(0, 0, 0, 0.15), 0 2px 4px rgba(0, 0, 0, 0.05);
  }

  .register-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0));
    z-index: -1;
  }

  /* Card Header Styles */
  .card-header {
    text-align: center;
    margin-bottom: 2rem;
  }

  .logo-container {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1.5rem;
    gap: 0.75rem;
  }

  .brand-mark {
    filter: drop-shadow(0 2px 4px rgba(30, 64, 175, 0.2));
    animation: pulse 3s infinite ease-in-out;
  }

  @keyframes pulse {
    0%, 100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
  }

  .brand-text {
    font-size: 1.75rem;
    font-weight: 800;
    background: linear-gradient(135deg, #3B82F6, #1E40AF);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin: 0;
  }

  .register-title {
    font-size: 1.75rem;
    font-weight: 700;
    color: #1F2937;
    margin: 0 0 0.5rem;
  }

  .register-subtitle {
    font-size: 1rem;
    color: #6B7280;
    margin: 0;
    line-height: 1.5;
  }

  /* Progress Bar Styles */
  .progress-bar {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin: 2rem 0;
    position: relative;
  }

  .progress-step {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    z-index: 2;
  }

  .step-number {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    background: #E5E7EB;
    color: #6B7280;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    margin-bottom: 0.5rem;
    transition: all 0.3s ease;
  }

  .step-label {
    font-size: 0.85rem;
    color: #6B7280;
    font-weight: 500;
    transition: all 0.3s ease;
  }

  .progress-step.active .step-number {
    background: linear-gradient(135deg, #3B82F6, #1E40AF);
    color: white;
    box-shadow: 0 4px 10px rgba(59, 130, 246, 0.3);
  }

  .progress-step.active .step-label {
    color: #1F2937;
    font-weight: 600;
  }

  .progress-step.completed .step-number {
    background: #10B981;
    color: white;
  }

  .progress-line {
    flex: 1;
    height: 2px;
    background: #E5E7EB;
    position: relative;
    z-index: 1;
  }

  .progress-line::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 0;
    background: linear-gradient(90deg, #3B82F6, #10B981);
    transition: width 0.5s ease;
  }

  .progress-step.active ~ .progress-line::before {
    width: 50%;
  }

  .progress-step.completed ~ .progress-line::before {
    width: 100%;
  }

  /* Form Styles */
  .register-form {
    position: relative;
  }

  .form-step {
    display: none;
    animation: fadeIn 0.5s ease forwards;
  }

  .form-step.active {
    display: block;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .form-group {
    margin-bottom: 1.5rem;
    position: relative;
  }

  .form-row {
    display: flex;
    gap: 1rem;
    margin-bottom: 1.5rem;
  }

  .form-row .form-group {
    flex: 1;
    margin-bottom: 0;
  }

  .form-group label {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
    font-weight: 600;
    color: #4B5563;
    margin-bottom: 0.5rem;
  }

  .form-group label i {
    color: #3B82F6;
  }

  .form-group input,
  .form-group textarea,
  .form-group select {
    width: 100%;
    padding: 0.75rem 1rem;
    font-size: 1rem;
    border: 1px solid #E5E7EB;
    border-radius: 12px;
    background: rgba(255, 255, 255, 0.8);
    transition: all 0.3s ease;
  }

  .form-group textarea {
    resize: vertical;
    min-height: 100px;
  }

  .form-group input:focus,
  .form-group textarea:focus,
  .form-group select:focus {
    outline: none;
    border-color: #3B82F6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.2);
    background: rgba(255, 255, 255, 1);
  }

  .input-highlight {
    position: absolute;
    bottom: 0;
    left: 0;
    height: 2px;
    width: 0;
    background: linear-gradient(90deg, #3B82F6, #8B5CF6);
    transition: width 0.3s ease;
    border-radius: 2px;
  }

  .form-group input:focus ~ .input-highlight,
  .form-group textarea:focus ~ .input-highlight,
  .form-group select:focus ~ .input-highlight {
    width: 100%;
  }

  .password-input-container {
    position: relative;
  }

  .toggle-password {
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    color: #6B7280;
    cursor: pointer;
    transition: color 0.3s ease;
  }

  .toggle-password:hover {
    color: #3B82F6;
  }

  /* Password Strength Meter */
  .password-strength {
    margin-top: 0.5rem;
  }

  .strength-bar {
    height: 4px;
    background: #E5E7EB;
    border-radius: 2px;
    position: relative;
    overflow: hidden;
    margin-bottom: 0.25rem;
  }

  .strength-bar::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 0;
    transition: width 0.3s ease, background-color 0.3s ease;
  }

  .strength-text {
    font-size: 0.75rem;
    color: #6B7280;
  }

  /* Checkbox Styles */
  .checkbox-container {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    margin-bottom: 1rem;
  }

  .checkbox-container input[type="checkbox"] {
    appearance: none;
    -webkit-appearance: none;
    width: 1.2rem;
    height: 1.2rem;
    border: 1px solid #E5E7EB;
    border-radius: 4px;
    background: white;
    cursor: pointer;
    position: relative;
    transition: all 0.3s ease;
    margin-top: 0.2rem;
  }

  .checkbox-container input[type="checkbox"]:checked {
    background: #3B82F6;
    border-color: #3B82F6;
  }

  .checkbox-container input[type="checkbox"]:checked::after {
    content: '✓';
    position: absolute;
    color: white;
    font-size: 0.8rem;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .checkbox-container label {
    color: #4B5563;
    font-size: 0.9rem;
    line-height: 1.5;
  }

  .terms-link {
    color: #3B82F6;
    text-decoration: none;
    font-weight: 600;
    transition: color 0.3s ease;
  }

  .terms-link:hover {
    color: #1E40AF;
    text-decoration: underline;
  }

  /* Form Actions */
  .form-actions {
    display: flex;
    justify-content: space-between;
    margin-top: 2rem;
  }

  .btn-prev,
  .btn-next,
  .btn-submit {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    padding: 0.9rem 1.5rem;
    border-radius: 12px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    border: none;
  }

  .btn-prev {
    background: white;
    color: #4B5563;
    border: 1px solid #E5E7EB;
  }

  .btn-prev:hover {
    background: #F9FAFB;
    color: #3B82F6;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  }

  .btn-next,
  .btn-submit {
    background: linear-gradient(135deg, #3B82F6, #1E40AF);
    color: white;
    box-shadow: 0 4px 14px rgba(59, 130, 246, 0.4);
    position: relative;
    overflow: hidden;
  }

  .btn-next::before,
  .btn-submit::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.7s ease;
  }

  .btn-next:hover,
  .btn-submit:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(59, 130, 246, 0.5);
    background: linear-gradient(135deg, #3B82F6, #8B5CF6);
  }

  .btn-next:hover::before,
  .btn-submit:hover::before {
    left: 100%;
  }

  .btn-next i,
  .btn-prev i,
  .btn-submit i {
    transition: transform 0.3s ease;
  }

  .btn-next:hover i {
    transform: translateX(3px);
  }

  .btn-prev:hover i {
    transform: translateX(-3px);
  }

  .btn-submit:hover i {
    transform: translateX(3px);
  }

  .button-loader {
    display: none;
    width: 1.2rem;
    height: 1.2rem;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-top: 2px solid white;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  /* Completion Step Styles */
  .completion-container {
    text-align: center;
    margin-bottom: 2rem;
  }

  .completion-icon {
    font-size: 4rem;
    color: #10B981;
    margin-bottom: 1rem;
    animation: bounceIn 1s ease;
  }

  @keyframes bounceIn {
    0% {
      opacity: 0;
      transform: scale(0.3);
    }
    50% {
      opacity: 1;
      transform: scale(1.05);
    }
    70% {
      transform: scale(0.9);
    }
    100% {
      transform: scale(1);
    }
  }

  .completion-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: #1F2937;
    margin-bottom: 0.5rem;
  }

  .completion-text {
    color: #6B7280;
    line-height: 1.5;
  }

  .terms-container {
    margin-bottom: 2rem;
  }

  /* Login Link Styles */
  .login-link {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 1.5rem;
    gap: 0.75rem;
  }

  .login-link p {
    color: #6B7280;
    font-size: 0.9rem;
    margin: 0;
  }

  .login-button {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    color: #3B82F6;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s ease;
    padding: 0.5rem 1rem;
    border-radius: 8px;
    background: rgba(59, 130, 246, 0.1);
  }

  .login-button:hover {
    background: rgba(59, 130, 246, 0.2);
    transform: translateY(-2px);
  }

  .login-button i {
    transition: transform 0.3s ease;
  }

  .login-button:hover i {
    transform: translateX(3px);
  }

  /* Back to Home Button */
  .back-to-home {
    position: absolute;
    top: 2rem;
    left: 2rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: #4B5563;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
    padding: 0.6rem 1.2rem;
    border-radius: 12px;
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.5);
  }

  .back-to-home:hover {
    background: white;
    color: #3B82F6;
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
  }

  /* Responsive Styles */
  @media (max-width: 768px) {
    .register-card {
      padding: 2rem;
    }

    .back-to-home {
      top: 1rem;
      left: 1rem;
      padding: 0.5rem 1rem;
      font-size: 0.9rem;
    }

    .form-row {
      flex-direction: column;
      gap: 1.5rem;
    }

    .step-label {
      display: none;
    }
  }

  @media (max-width: 480px) {
    .register-container {
      padding: 1rem;
    }

    .register-card {
      padding: 1.5rem;
    }

    .register-title {
      font-size: 1.5rem;
    }

    .form-actions {
      flex-direction: column;
      gap: 1rem;
    }

    .btn-prev,
    .btn-next,
    .btn-submit {
      width: 100%;
    }

    .back-to-home span {
      display: none;
    }

    .back-to-home {
      padding: 0.5rem;
      border-radius: 50%;
    }
  }
</style>

<script>
  // Initialize AOS animations
  document.addEventListener('DOMContentLoaded', function() {
    AOS.init({
      once: true,
      duration: 800,
      easing: 'ease-out'
    });

    // Multi-step form navigation
    const form = document.getElementById('register-form');
    const steps = document.querySelectorAll('.form-step');
    const progressSteps = document.querySelectorAll('.progress-step');
    const nextButtons = document.querySelectorAll('.btn-next');
    const prevButtons = document.querySelectorAll('.btn-prev');
    let currentStep = 1;

    // Next button click handler
    nextButtons.forEach(button => {
      button.addEventListener('click', () => {
        // Here you would normally validate the current step
        // For demo purposes, we'll just proceed
        if (currentStep < steps.length) {
          // Hide current step
          document.querySelector(`.form-step[data-step="${currentStep}"]`).classList.remove('active');
          // Mark current step as completed
          document.querySelector(`.progress-step[data-step="${currentStep}"]`).classList.add('completed');
          // Increment step
          currentStep++;
          // Show next step
          document.querySelector(`.form-step[data-step="${currentStep}"]`).classList.add('active');
          // Mark next step as active
          document.querySelector(`.progress-step[data-step="${currentStep}"]`).classList.add('active');
        }
      });
    });

    // Previous button click handler
    prevButtons.forEach(button => {
      button.addEventListener('click', () => {
        if (currentStep > 1) {
          // Hide current step
          document.querySelector(`.form-step[data-step="${currentStep}"]`).classList.remove('active');
          // Remove active class from current step
          document.querySelector(`.progress-step[data-step="${currentStep}"]`).classList.remove('active');
          // Decrement step
          currentStep--;
          // Show previous step
          document.querySelector(`.form-step[data-step="${currentStep}"]`).classList.add('active');
          // Remove completed class from previous step
          document.querySelector(`.progress-step[data-step="${currentStep}"]`).classList.remove('completed');
        }
      });
    });

    // Toggle password visibility
    const togglePasswordButtons = document.querySelectorAll('.toggle-password');
    togglePasswordButtons.forEach(button => {
      button.addEventListener('click', function() {
        const input = this.parentElement.querySelector('input');
        const type = input.getAttribute('type') === 'password' ? 'text' : 'password';
        input.setAttribute('type', type);
        this.querySelector('i').classList.toggle('fa-eye');
        this.querySelector('i').classList.toggle('fa-eye-slash');
      });
    });

    // Password strength meter
    const passwordInput = document.getElementById('password');
    const strengthBar = document.querySelector('.strength-bar');
    const strengthText = document.querySelector('.strength-text');

    if (passwordInput && strengthBar && strengthText) {
      passwordInput.addEventListener('input', function() {
        const password = this.value;
        let strength = 0;
        let color = '';
        let text = 'Kekuatan Password';

        if (password.length >= 8) strength += 1;
        if (password.match(/[a-z]/) && password.match(/[A-Z]/)) strength += 1;
        if (password.match(/\d/)) strength += 1;
        if (password.match(/[^a-zA-Z\d]/)) strength += 1;

        switch (strength) {
          case 0:
            color = '#E5E7EB';
            text = 'Kekuatan Password';
            break;
          case 1:
            color = '#EF4444';
            text = 'Lemah';
            break;
          case 2:
            color = '#F59E0B';
            text = 'Sedang';
            break;
          case 3:
            color = '#10B981';
            text = 'Kuat';
            break;
          case 4:
            color = '#059669';
            text = 'Sangat Kuat';
            break;
        }

        strengthBar.style.setProperty('--strength-width', `${strength * 25}%`);
        strengthBar.style.setProperty('--strength-color', color);
        strengthText.textContent = text;
        strengthText.style.color = color;

        // Apply width and color to the strength bar
        strengthBar.style.width = `${strength * 25}%`;
        strengthBar.style.backgroundColor = color;
      });
    }

    // Form submission animation
    const registerForm = document.getElementById('register-form');
    if (registerForm) {
      registerForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const button = this.querySelector('.btn-submit');
        const buttonText = button.querySelector('.button-text');
        const buttonIcon = button.querySelector('i');
        const buttonLoader = button.querySelector('.button-loader');
        
        // Show loading state
        buttonText.style.opacity = '0';
        buttonIcon.style.opacity = '0';
        buttonLoader.style.display = 'block';
        
        // Simulate API call
        setTimeout(() => {
          // Reset button state
          buttonText.style.opacity = '1';
          buttonIcon.style.opacity = '1';
          buttonLoader.style.display = 'none';
          
          // Redirect to login (in a real app)
          // window.location.href = '/login';
          
          // For demo purposes, just show success
          alert('Pendaftaran berhasil! Ini adalah demo.');
        }, 2000);
      });
    }

    // Create floating particles
    createParticles();
  });

  // Function to create floating particles
  function createParticles() {
    const container = document.getElementById('particles-container');
    if (!container) return;

    const particleCount = 30;
    const colors = ['#3B82F6', '#10B981', '#8B5CF6', '#F59E0B'];

    for (let i = 0; i < particleCount; i++) {
      const particle = document.createElement('div');
      particle.className = 'particle';
      
      // Random properties
      const size = Math.random() * 10 + 3;
      const color = colors[Math.floor(Math.random() * colors.length)];
      
      // Position
      const posX = Math.random() * 100;
      const posY = Math.random() * 100;
      
      // Animation duration and delay
      const animationDuration = Math.random() * 20 + 10;
      const animationDelay = Math.random() * 10;
      
      // Apply styles
      particle.style.cssText = `
        position: absolute;
        top: ${posY}%;
        left: ${posX}%;
        width: ${size}px;
        height: ${size}px;
        background-color: ${color};
        border-radius: 50%;
        opacity: ${Math.random() * 0.6 + 0.2};
        animation: floatParticle ${animationDuration}s ease-in-out ${animationDelay}s infinite;
      `;
      
      container.appendChild(particle);
    }
  }

  // Define the particle animation
  const style = document.createElement('style');
  style.textContent = `
    @keyframes floatParticle {
      0%, 100% {
        transform: translate(0, 0) rotate(0deg);
      }
      25% {
        transform: translate(50px, -30px) rotate(90deg);
      }
      50% {
        transform: translate(0, -60px) rotate(180deg);
      }
      75% {
        transform: translate(-50px, -30px) rotate(270deg);
      }
    }
  `;
  document.head.appendChild(style);
</script>